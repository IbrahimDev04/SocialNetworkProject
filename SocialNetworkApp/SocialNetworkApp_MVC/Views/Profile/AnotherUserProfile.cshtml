@{
    ViewData["Title"] = "Profile";
}

@model AnotherUserCurier


<div id="wrapper">


    <!-- main contents -->
    <main id="site__main" class="2xl:ml-[--w-side]  xl:ml-[--w-side-sm] p-2.5 h-[calc(100vh-var(--m-top))] mt-[--m-top]">

        <div class="max-w-[1065px] mx-auto max-lg:-m-2.5">

            <!-- cover  -->
            <div class="bg-white shadow lg:rounded-b-2xl lg:-mt-10 dark:bg-dark2">

                <!-- cover -->
                <div class="relative overflow-hidden w-full lg:h-72 h-48">
                    <img src="assets/images/avatars/profile-cover.jpg" alt="" class="h-full w-full object-cover inset-0">

                    <!-- overly -->
                    <div class="w-full bottom-0 absolute left-0 bg-gradient-to-t from-black/60 pt-20 z-10"></div>

                </div>

                <!-- user info -->
                <div class="p-3">

                    <div class="flex flex-col justify-center md:items-center lg:-mt-48 -mt-28">

                        <div class="relative lg:h-48 lg:w-48 w-28 h-28 mb-4 z-10">
                            <div class="relative overflow-hidden rounded-full md:border-[6px] border-gray-100 shrink-0 dark:border-slate-900 shadow">
                                <img src="~/@Model.GetAnotherUserProfileVM[0].ProfilePhoto" style="height: 180px;" alt="" class="h-full w-full object-cover inset-0">
                            </div>

                        </div>

                        <h3 class="md:text-3xl text-base font-bold text-black dark:text-white"> @Model.GetAnotherUserProfileVM[0].FullName </h3>

                        <p class="mt-2 text-gray-500 dark:text-white/80">@@@Model.GetAnotherUserProfileVM[0].UserName</p>

                        <p class="mt-2 max-w-xl text-sm md:font-normal font-light text-center"> @Model.GetAnotherUserProfileVM[0].About </p>

                    </div>

                </div>

                <!-- navigations -->
                <div class="flex items-center justify-between mt-3 border-t border-gray-100 px-2 max-lg:flex-col dark:border-slate-700"
                     uk-sticky="offset:50; cls-active: bg-white/80 shadow rounded-b-2xl z-50 backdrop-blur-xl dark:!bg-slate-700/80; animation:uk-animation-slide-top ; media: 992">

                    <div class="flex items-center gap-2 text-sm py-2 pr-1 max-md:w-full lg:order-2">
                        @if (Model.Status == false)
                        {
                            <a asp-action="SendRequest" asp-controller="Home" asp-route-userId="@Model.UserId" class="button bg-primary flex items-center gap-2 text-white py-2 px-3.5 max-md:flex-1">
                                <ion-icon name="add-circle" class="text-xl"></ion-icon>
                                <span class="text-sm"> Follow  </span>
                            </a>
                        }
                        else if (@Model.Status == true && @Model.FollowedStatus == true && @Model.IsForYou == true)
                        {
                            <a asp-action="AcceptRequest" asp-controller="Home" asp-route-userId="@Model.UserId" class="button bg-primary flex items-center gap-2 text-white py-2 px-3.5 max-md:flex-1">
                                <ion-icon name="add-circle" class="text-xl"></ion-icon>
                                <span class="text-sm"> Accept  </span>
                            </a>
                        }
                        else
                        {
                            <a style="background-color:dimgrey;" asp-action="UnfollowUser" asp-controller="Home" asp-route-userId="@Model.UserId" class="button bg-primary flex items-center gap-2 text-white py-2 px-3.5 max-md:flex-1">
                                <span class="text-sm"> Unfollow  </span>
                            </a>
                        }

                    </div>

                    <nav class="flex gap-0.5 rounded-xl -mb-px text-gray-600 font-medium text-[15px]  dark:text-white max-md:w-full max-md:overflow-x-auto">
                        <a asp-action="AnotherUserProfile" asp-controller="Profile" asp-route-userId="@Model.GetAnotherUserProfileVM[0].UserId" class="inline-block  py-3 leading-8 px-3.5 border-b-2 border-blue-600 text-blue-600">Timeline</a>
                        <a asp-action="GetAnotherFriend" asp-controller="Profile" asp-route-userId="@Model.GetAnotherUserProfileVM[0].UserId" class="inline-block py-3 leading-8 px-3.5">Friend <span class="text-xs pl-2 font-normal lg:inline-block hidden"></span></a>
                    </nav>

                </div>

            </div>

            <div class="flex 2xl:gap-12 gap-10 mt-8 max-lg:flex-col" id="js-oversized">

                <!-- feed story -->

                <div class="flex-1 xl:space-y-6 space-y-3">
                    @foreach (var posts in Model.getPostsVM)
                    {
                        <!--  post image-->
                        <div class="bg-white rounded-xl shadow-sm text-sm font-medium border1 dark:bg-dark2">

                            <!-- post heading -->
                            <div class="flex gap-3 sm:p-4 p-2.5 text-sm font-medium">
                                <a asp-action="AnotherUserProfile" asp-controller="Profile" asp-route-userId="@posts.UserId"> <img src="~/@posts.ProfilePhoto" alt="" class="w-9 h-9 rounded-full"> </a>
                                <div class="flex-1" style="display: flex;align-items: center;">
                                    <a asp-action="AnotherUserProfile" asp-controller="Profile" asp-route-userId="@posts.UserId"> <h4 class="text-black dark:text-white"> @posts.UserName </h4> </a>
                                    <div class="text-xs text-gray-500 dark:text-white/80"><strong style="color:slategrey; font-size:15px; margin-left:6px;">@posts.Date</strong></div>
                                </div>

                                <div class="-mr-1">
                                    <button type="button" class="button-icon w-8 h-8"> <ion-icon class="text-xl" name="ellipsis-horizontal"></ion-icon> </button>
                                    <div class="w-[245px]" uk-dropdown="pos: bottom-right; animation: uk-animation-scale-up uk-transform-origin-top-right; animate-out: true; mode: click">
                                        <nav>
                                            @if (posts.HaveFavouritePost)
                                            {
                                                <div style="cursor:pointer; display: flex;align-items: centeralign-items: center;gap: 0.75rem;border-radius: 0.375rem;padding-top: 0.5rem;padding-bottom: 0.5rem;padding-left: 0.625rem;padding-right: 0.625rem;">
                                                    <a onclick="toggleFavorite('@posts.PostId', false);" id="favoriteLink-@posts.PostId">
                                                        <i class="fa-regular fa-bookmark text-xl shrink-0 md hydrated"></i>
                                                    </a>
                                                    <a onclick="toggleFavorite('@posts.PostId', false);" id="favoriteText-@posts.PostId">
                                                        Remove from favorites
                                                    </a>
                                                </div>

                                            }
                                            else
                                            {
                                                <div style="cursor:pointer; display: flex;align-items: centeralign-items: center;gap: 0.75rem;border-radius: 0.375rem;padding-top: 0.5rem;padding-bottom: 0.5rem;padding-left: 0.625rem;padding-right: 0.625rem;">
                                                    <a onclick="toggleFavorite('@posts.PostId', true);" id="favoriteLink-@posts.PostId">
                                                        <i class="fa-regular fa-bookmark text-xl shrink-0 md hydrated"></i>
                                                    </a>
                                                    <a onclick="toggleFavorite('@posts.PostId', true);" id="favoriteText-@posts.PostId">
                                                        Add to favorites
                                                    </a>
                                                </div>

                                            }

                                            <a href="#"> <ion-icon class="text-xl shrink-0" name="notifications-off-outline"></ion-icon> Mute Notification </a>
                                            <a href="#"> <ion-icon class="text-xl shrink-0" name="flag-outline"></ion-icon>  Report this post </a>
                                            <a href="#"> <ion-icon class="text-xl shrink-0" name="share-outline"></ion-icon>  Share your profile </a>
                                            <hr>
                                            <a href="#" class="text-red-400 hover:!bg-red-50 dark:hover:!bg-red-500/50"> <ion-icon class="text-xl shrink-0" name="stop-circle-outline"></ion-icon>  Unfollow </a>
                                        </nav>
                                    </div>
                                </div>
                            </div>

                            <!-- post image -->
                            @if (posts.VideoUrl == null && posts.ImageUrl == null)
                            {
                                <a href="#preview_modal">
                                    <div class="relative w-full lg:h-96 h-full sm:px-4" style="height:100px !important;">
                                        @if (posts.ImageUrl != null)
                                        {
                                            <div style="background-color:#65656542; align-content: center;" class="sm:rounded-lg w-full h-full object-cover">
                                                <img src="~/@posts.ImageUrl" alt="" class="">
                                            </div>

                                        }
                                        else if (posts.VideoUrl != null)
                                        {
                                            <div style="background-color:#65656542; align-content: center;" class="sm:rounded-lg w-full h-full object-cover">
                                                <video loop autoplay style="width:100%; height:100%;">
                                                    <source src="~/@posts.VideoUrl" type="video/mp4" />
                                                    <source src="~/@posts.VideoUrl" type="video/webm" />
                                                    <source src="~/@posts.VideoUrl" type="video/ogg" />
                                                </video>
                                            </div>
                                        }
                                        else if (posts.VideoUrl == null && posts.ImageUrl == null)
                                        {
                                            <div class="sm:px-4 p-2.5 pt-0">
                                                <p class="font-normal"> @posts.Description </p>
                                            </div>
                                        }

                                    </div>
                                </a>
                            }
                            else
                            {
                                <a href="#preview_modal">
                                    <div class="relative w-full lg:h-96 h-full sm:px-4">
                                        @if (posts.ImageUrl != null)
                                        {
                                            <div style="background-color:#65656542; align-content: center;" class="sm:rounded-lg w-full h-full object-cover">
                                                <img src="~/@posts.ImageUrl" alt="" class="">
                                            </div>

                                        }
                                        else if (posts.VideoUrl != null)
                                        {
                                            <div style="background-color:#65656542; align-content: center;" class="sm:rounded-lg w-full h-full object-cover">
                                                <video loop autoplay style="width:100%; height:100%;">
                                                    <source src="~/@posts.VideoUrl" type="video/mp4" />
                                                    <source src="~/@posts.VideoUrl" type="video/webm" />
                                                    <source src="~/@posts.VideoUrl" type="video/ogg" />
                                                </video>
                                            </div>
                                        }
                                        else if (posts.VideoUrl == null && posts.ImageUrl == null)
                                        {
                                            <div class="sm:px-4 p-2.5 pt-0">
                                                <p class="font-normal"> @posts.Description </p>
                                            </div>
                                        }

                                    </div>
                                </a>
                            }



                            <!-- post icons -->
                            <div class="sm:p-4 p-2.5 flex items-center gap-4 text-xs font-semibold">
                                <div style="display: flex;flex-direction: row;align-items: center;">
                                    @* @if (!posts.HaveLikePost)
                                {
                                <div class="flex items-center gap-2.5">
                                <a asp-action="LikePost" asp-controller="Home" asp-route-PostId="@posts.PostId" style="cursor:pointer;background-color: rgb(51 65 85 / 0%);" type="button" class="button-icon text-red-500 bg-red-100 dark:bg-slate-700"> <ion-icon class="text-lg" name="heart"></ion-icon> </a>
                                <a href="#">@posts.LikeCount</a>
                                </div>
                                }
                                else
                                {
                                <div class="flex items-center gap-2.5">
                                <a asp-action="UnlikePost" asp-controller="Home" asp-route-PostId="@posts.PostId" style="cursor:pointer;" type="button" class="button-icon text-red-500 bg-red-100 dark:bg-slate-700"> <ion-icon class="text-lg" name="heart"></ion-icon> </a>
                                <a href="#">@posts.LikeCount</a>
                                </div>
                                } *@

                                    @if (posts.HaveLikePost)
                                    {
                                        <div class="@(posts.PostId)1" style="display: flex;align-items: center">
                                            <a onclick="toggleLike('@posts.PostId', false);" style="cursor:pointer;" type="button" class="button-icon text-red-500 bg-red-100 dark:bg-slate-700 @posts.PostId" id="likeButton-@posts.PostId">
                                                <ion-icon class="text-lg" name="heart"></ion-icon>
                                            </a>
                                            <a onclick="toggleLike('@posts.PostId', false);" class="@posts.PostId" style="cursor:pointer;" id="likeText-@posts.PostId">Unlike</a>
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="@(posts.PostId)1" style="display: flex;align-items: center">
                                            <a onclick="toggleLike('@posts.PostId', true);" style="cursor:pointer;background-color: rgb(51 65 85 / 0%);" type="button" class="button-icon text-red-500 bg-red-100 dark:bg-slate-700 @posts.PostId" id="likeButton-@posts.PostId">
                                                <ion-icon class="text-lg" name="heart"></ion-icon>
                                            </a>
                                            <a onclick="toggleLike('@posts.PostId', true);" class="@posts.PostId" style="cursor:pointer;" id="likeText-@posts.PostId">Like</a>
                                        </div>
                                    }


                                </div>
                                <button type="button" class="button-icon ml-auto"> <ion-icon class="text-xl" name="paper-plane-outline"></ion-icon> </button>
                                <button type="button" class="button-icon"> <ion-icon class="text-xl" name="share-outline"></ion-icon> </button>
                            </div>

                            <!-- comments -->
                            <div class="sm:p-4 p-2.5 border-t border-gray-100 font-normal space-y-3 relative dark:border-slate-700/40 scrollbarrComment">
                                @if (posts.VideoUrl != null || posts.ImageUrl != null)
                                {
                                    <div class="sm:px-4 p-2.5 pt-0">
                                        <p class="font-normal"> @posts.Description </p>
                                    </div>
                                }

                                @foreach (var comment in posts.GetCommentVM)
                                {
                                    <div class="flex justify-between" id="commetArea-@comment.CommentId">
                                        <div id="messagePlace-@posts.PostId" class="flex items-start gap-3 relative">
                                            <a href="timeline.html"> <img src="~/@comment.ProfilePhoto" alt="" class="w-6 h-6 mt-1 rounded-full"> </a>
                                            <div class="flex-1">
                                                <a href="timeline.html" class="text-black font-medium inline-block dark:text-white"> @comment.UserName <strong style="color:slategrey">@comment.Date</strong> </a>
                                                <p class="mt-0.5"> @comment.Comment </p>
                                            </div>
                                        </div>
                                        @if (comment.IsYourComment)
                                        {
                                            <div style="color:slategrey; padding-top:5px; margin-right:10px;">
                                                <a onclick="toggleDelete('@comment.CommentId')" class="cursor-pointer"><i class="fa-solid fa-trash"></i></a>
                                            </div>
                                        }

                                    </div>

                                }


                            </div>

                            <!-- add comment -->
                            <div class="sm:px-4 sm:py-3 p-2.5 border-t border-gray-100 flex items-center gap-1 dark:border-slate-700/40">

                                <img src="assets/images/avatars/avatar-7.jpg" alt="" class="w-6 h-6 rounded-full">

                                <div class="flex-1 relative overflow-hidden h-10">
                                    <textarea id="commentValue-@posts.PostId" placeholder="Add Comment...." rows="1" class="w-full resize-none !bg-transparent px-4 py-2 focus:!border-transparent focus:!ring-transparent"></textarea>
                                </div>

                                <button class="button-comment-sender">
                                    <a onclick="sendMessage('@posts.PostId')" class="text-sm rounded-full py-1.5 px-3.5 bg-secondery"> Replay</a>
                                </button>
                            </div>



                        </div>



                    }

                    <!-- placeholder -->
                    <div class="rounded-xl shadow-sm p-4 space-y-4 bg-slate-200/40 animate-pulse border1 dark:bg-dark2">

                        <div class="flex gap-3">
                            <div class="w-9 h-9 rounded-full bg-slate-300/20"></div>
                            <div class="flex-1 space-y-3">
                                <div class="w-40 h-5 rounded-md bg-slate-300/20"></div>
                                <div class="w-24 h-4 rounded-md bg-slate-300/20"></div>
                            </div>
                            <div class="w-6 h-6 rounded-full bg-slate-300/20"></div>
                        </div>

                        <div class="w-full h-52 rounded-lg bg-slate-300/10 my-3"> </div>

                        <div class="flex gap-3">

                            <div class="w-16 h-5 rounded-md bg-slate-300/20"></div>

                            <div class="w-14 h-5 rounded-md bg-slate-300/20"></div>

                            <div class="w-6 h-6 rounded-full bg-slate-300/20 ml-auto"></div>
                            <div class="w-6 h-6 rounded-full bg-slate-300/20  "></div>
                        </div>

                    </div>


                </div>

                <!-- sidebar -->

                <div class="lg:w-[400px]">

                    <div class="lg:space-y-4 lg:pb-8 max-lg:grid sm:grid-cols-2 max-lg:gap-6"
                         uk-sticky="media: 1024; end: #js-oversized; offset: 80">
                        @if (@Model.GetAnotherUserProfileVM[0].AtWork != null || @Model.GetAnotherUserProfileVM[0].AtStudy != null || @Model.GetAnotherUserProfileVM[0].Location != "")
                        {
                            <div class="box p-5 px-6">

                                <ul class="text-gray-700 space-y-4 mt-4 text-sm dark:text-white/80">
                                    @if (@Model.GetAnotherUserProfileVM[0].Location != "")
                                    {
                                        <li class="flex items-center gap-3">
                                            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
                                                <path stroke-linecap="round" stroke-linejoin="round" d="M15 10.5a3 3 0 11-6 0 3 3 0 016 0z" />
                                                <path stroke-linecap="round" stroke-linejoin="round" d="M19.5 10.5c0 7.142-7.5 11.25-7.5 11.25S4.5 17.642 4.5 10.5a7.5 7.5 0 1115 0z" />
                                            </svg>
                                            <div>  Live In <span class="font-semibold text-black dark:text-white"> @Model.GetAnotherUserProfileVM[0].Location  </span> </div>
                                        </li>
                                    }
                                    @if (@Model.GetAnotherUserProfileVM[0].AtStudy != null)
                                    {
                                        <li class="flex items-center gap-3">
                                            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
                                                <path stroke-linecap="round" stroke-linejoin="round" d="M4.26 10.147a60.436 60.436 0 00-.491 6.347A48.627 48.627 0 0112 20.904a48.627 48.627 0 018.232-4.41 60.46 60.46 0 00-.491-6.347m-15.482 0a50.57 50.57 0 00-2.658-.813A59.905 59.905 0 0112 3.493a59.902 59.902 0 0110.399 5.84c-.896.248-1.783.52-2.658.814m-15.482 0A50.697 50.697 0 0112 13.489a50.702 50.702 0 017.74-3.342M6.75 15a.75.75 0 100-1.5.75.75 0 000 1.5zm0 0v-3.675A55.378 55.378 0 0112 8.443m-7.007 11.55A5.981 5.981 0 006.75 15.75v-1.5" />
                                            </svg>
                                            <div>  Studied at <span class="font-semibold text-black dark:text-white">@Model.GetAnotherUserProfileVM[0].AtStudy</span> </div>
                                        </li>
                                    }
                                    @if (@Model.GetAnotherUserProfileVM[0].AtWork != null)
                                    {
                                        <li class="flex items-center gap-3">
                                            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
                                                <path stroke-linecap="round" stroke-linejoin="round" d="M20.25 14.15v4.25c0 1.094-.787 2.036-1.872 2.18-2.087.277-4.216.42-6.378.42s-4.291-.143-6.378-.42c-1.085-.144-1.872-1.086-1.872-2.18v-4.25m16.5 0a2.18 2.18 0 00.75-1.661V8.706c0-1.081-.768-2.015-1.837-2.175a48.114 48.114 0 00-3.413-.387m4.5 8.006c-.194.165-.42.295-.673.38A23.978 23.978 0 0112 15.75c-2.648 0-5.195-.429-7.577-1.22a2.016 2.016 0 01-.673-.38m0 0A2.18 2.18 0 013 12.489V8.706c0-1.081.768-2.015 1.837-2.175a48.111 48.111 0 013.413-.387m7.5 0V5.25A2.25 2.25 0 0013.5 3h-3a2.25 2.25 0 00-2.25 2.25v.894m7.5 0a48.667 48.667 0 00-7.5 0M12 12.75h.008v.008H12v-.008z" />
                                            </svg>

                                            <div>  Works at <span class="font-semibold text-black dark:text-white">@Model.GetAnotherUserProfileVM[0].AtWork</span> </div>
                                        </li>
                                    }


                                </ul>


                            </div>
                        }

                        <div class="box p-5 px-6">

                            <div class="flex items-ce justify-between text-black dark:text-white">
                                <h3 class="font-bold text-lg">
                                    Friends
                                    <span class="block text-sm text-gray-500 mt-0. font-normal dark:text-white"> @Model.FriendCount Friends </span>
                                </h3>
                                <a href="#" class="text-sm text-blue-500">Find Friend</a>
                            </div>

                            <div class="grid grid-cols-3 gap-2 gap-y-5 text-center text-sm mt-4 mb-2">
                                @foreach (var friend in Model.GetUserVM)
                                {
                                    if (friend.Status == true)
                                    {
                                        <a asp-action="AnotherUserProfile" asp-controller="Profile" asp-route-userId="@friend.Id">
                                            <div>
                                                <div class="relative w-full aspect-square rounded-lg overflow-hidden">
                                                    <img src="~/@friend.ProfilePhoto" alt="" class="object-cover w-full h-full inset-0">
                                                </div>
                                                <div class="mt-2 line-clamp-1"> @friend.UserName </div>
                                            </div>
                                        </a>
                                        
                                    }

                                }

                                @* <div>
                                <div class="relative w-full aspect-square rounded-lg overflow-hidden">
                                <img src="assets/images/avatars/avatar-2.jpg" alt="" class="object-cover w-full h-full inset-0">
                                </div>
                                <div class="mt-2 line-clamp-1"> John Michael </div>
                                </div>
                                <div>
                                <div class="relative w-full aspect-square rounded-lg overflow-hidden">
                                <img src="assets/images/avatars/avatar-3.jpg" alt="" class="object-cover w-full h-full inset-0">
                                </div>
                                <div class="mt-2 line-clamp-1"> Monroe Parker </div>
                                </div>
                                <div>
                                <div class="relative w-full aspect-square rounded-lg overflow-hidden">
                                <img src="assets/images/avatars/avatar-4.jpg" alt="" class="object-cover w-full h-full inset-0">
                                </div>
                                <div class="mt-2 line-clamp-1"> Martin Gray </div>
                                </div>
                                <div>
                                <div class="relative w-full aspect-square rounded-lg overflow-hidden">
                                <img src="assets/images/avatars/avatar-5.jpg" alt="" class="object-cover w-full h-full inset-0">
                                </div>
                                <div class="mt-2 line-clamp-1"> James Lewis </div>
                                </div>
                                <div>
                                <div class="relative w-full aspect-square rounded-lg overflow-hidden">
                                <img src="assets/images/avatars/avatar-6.jpg" alt="" class="object-cover w-full h-full inset-0">
                                </div>
                                <div class="mt-2 line-clamp-1"> Alexa stella </div>
                                </div> *@


                            </div>


                        </div>

                    </div>

                </div>

            </div>

        </div>

    </main>

</div>


<!-- open chat box -->
<div>
    <button type="button" class="sm:m-10 m-5 px-4 py-2.5 rounded-2xl bg-gradient-to-tr from-blue-500 to-blue-700 text-white shadow fixed bottom-0 right-0 group flex items-center gap-2">

        <svg class="w-6 h-6 group-aria-expanded:hidden duration-500" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" d="M7.5 8.25h9m-9 3H12m-9.75 1.51c0 1.6 1.123 2.994 2.707 3.227 1.129.166 2.27.293 3.423.379.35.026.67.21.865.501L12 21l2.755-4.133a1.14 1.14 0 01.865-.501 48.172 48.172 0 003.423-.379c1.584-.233 2.707-1.626 2.707-3.228V6.741c0-1.602-1.123-2.995-2.707-3.228A48.394 48.394 0 0012 3c-2.392 0-4.744.175-7.043.513C3.373 3.746 2.25 5.14 2.25 6.741v6.018z"></path>
        </svg>

        <div class="text-base font-semibold max-sm:hidden"> Chat </div>

        <svg class="w-6 h-6 -mr-1 hidden group-aria-expanded:block" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor">
            <path fill-rule="evenodd" d="M5.47 5.47a.75.75 0 011.06 0L12 10.94l5.47-5.47a.75.75 0 111.06 1.06L13.06 12l5.47 5.47a.75.75 0 11-1.06 1.06L12 13.06l-5.47 5.47a.75.75 0 01-1.06-1.06L10.94 12 5.47 6.53a.75.75 0 010-1.06z" clip-rule="evenodd" />
        </svg>

    </button>
    <div class="bg-white rounded-xl drop-shadow-xl  sm:w-80 w-screen border-t dark:bg-dark3 dark:border-slate-600" id="chat__box"
         uk-drop="offset:10;pos: bottom-right; animate-out: true; animation: uk-animation-scale-up uk-transform-origin-bottom-right; mode: click">

        <div class="relative">
            <div class="p-5">
                <h1 class="text-lg font-bold text-black"> Chats </h1>
            </div>

            <!-- search input defaul is hidden -->
            <div class="bg-white p-3 absolute w-full top-11 border-b flex gap-2 hidden dark:border-slate-600 dark:bg-slate-700 z-10"
                 uk-scrollspy="cls:uk-animation-slide-bottom-small ; repeat: true; duration:0" id="search__chat">

                <div class="relative w-full">
                    <input type="text" class="w-full rounded-3xl dark:!bg-white/10" placeholder="Search">

                    <button type="button" class="absolute  right-0  rounded-full shrink-0 px-2 -translate-y-1/2 top-1/2"
                            uk-toggle="target: #search__chat ; cls: hidden">

                        <ion-icon name="close-outline" class="text-xl flex"></ion-icon>
                    </button>
                </div>

            </div>

            <!-- button actions -->
            <div class="absolute top-0 -right-1 m-5 flex gap-2 text-xl">
                <button uk-toggle="target: #search__chat ; cls: hidden">
                    <ion-icon name="search-outline"></ion-icon>
                </button>
                <button uk-toggle="target: #chat__box ; cls: uk-open">
                    <ion-icon name="close-outline"></ion-icon>
                </button>
            </div>

            <!-- tabs -->
            <div class="page-heading bg-slat e-50 ">

                <nav class="nav__underline -mt-7 px-5">

                    <ul class="group" uk-switcher="connect: #chat__tabs ; animation: uk-animation-slide-right-medium, uk-animation-slide-left-medium">

                        <li> <a href="#" class="inline-block py-[18px] border-b-2 border-transparent aria-expanded:text-black aria-expanded:border-black aria-expanded:dark:text-white aria-expanded:dark:border-white"> Friends  </a> </li>
                        <li> <a href="#"> Groups </a> </li>

                    </ul>

                </nav>

            </div>

            <!-- tab 2 optional -->
            <div class="grid grid-cols-2 px-3 py-2 bg-slate-50  -mt-12 relative z-10 text-sm border-b  hidden" uk-switcher="connect: #chat__tabs; toggle: * > button ; animation: uk-animation-slide-right uk-animation-slide-top">
                <button class="bg-white shadow rounded-md py-1.5"> Friends </button>
                <button> Groups </button>
            </div>

            <!-- chat list -->
            <div class="uk-switcher overflow-hidden rounded-xl -mt-8" id="chat__tabs">

                <!-- tab list 1 -->
                <div class="space-y -m t-5 p-3 text-sm font-medium h-[280px] overflow-y-auto">

                    <a href="#" class="block">
                        <div class="flex items-center gap-3.5 rounded-lg p-2 hover:bg-secondery dark:hover:bg-white/10">
                            <img src="assets/images/avatars/avatar-1.jpg" alt="" class="w-7 rounded-full">
                            <div> Jesse Steeve </div>
                        </div>
                    </a>
                    <a href="#" class="block">
                        <div class="flex items-center gap-3.5 rounded-lg p-2 hover:bg-secondery dark:hover:bg-white/10">
                            <img src="assets/images/avatars/avatar-2.jpg" alt="" class="w-7 rounded-full">
                            <div> John Michael </div>
                        </div>
                    </a>
                    <a href="#" class="block">
                        <div class="flex items-center gap-3.5 rounded-lg p-2 hover:bg-secondery dark:hover:bg-white/10">
                            <img src="assets/images/avatars/avatar-3.jpg" alt="" class="w-7 rounded-full">
                            <div> Monroe Parker </div>
                        </div>
                    </a>
                    <a href="#" class="block">
                        <div class="flex items-center gap-3.5 rounded-lg p-2 hover:bg-secondery dark:hover:bg-white/10">
                            <img src="assets/images/avatars/avatar-5.jpg" alt="" class="w-7 rounded-full">
                            <div> James Lewis </div>
                        </div>
                    </a>
                    <a href="#" class="block">
                        <div class="flex items-center gap-3.5 rounded-lg p-2 hover:bg-secondery dark:hover:bg-white/10">
                            <img src="assets/images/avatars/avatar-4.jpg" alt="" class="w-7 rounded-full">
                            <div> Martin Gray </div>
                        </div>
                    </a>
                    <a href="#" class="block">
                        <div class="flex items-center gap-3.5 rounded-lg p-2 hover:bg-secondery dark:hover:bg-white/10">
                            <img src="assets/images/avatars/avatar-6.jpg" alt="" class="w-7 rounded-full">
                            <div> Alexa stella </div>
                        </div>
                    </a>
                    <a href="#" class="block">
                        <div class="flex items-center gap-3.5 rounded-lg p-2 hover:bg-secondery dark:hover:bg-white/10">
                            <img src="assets/images/avatars/avatar-1.jpg" alt="" class="w-7 rounded-full">
                            <div> Jesse Steeve </div>
                        </div>
                    </a>
                    <a href="#" class="block">
                        <div class="flex items-center gap-3.5 rounded-lg p-2 hover:bg-secondery dark:hover:bg-white/10">
                            <img src="assets/images/avatars/avatar-2.jpg" alt="" class="w-7 rounded-full">
                            <div> John Michael </div>
                        </div>
                    </a>
                    <a href="#" class="block">
                        <div class="flex items-center gap-3.5 rounded-lg p-2 hover:bg-secondery dark:hover:bg-white/10">
                            <img src="assets/images/avatars/avatar-3.jpg" alt="" class="w-7 rounded-full">
                            <div> Monroe Parker </div>
                        </div>
                    </a>
                    <a href="#" class="block">
                        <div class="flex items-center gap-3.5 rounded-lg p-2 hover:bg-secondery dark:hover:bg-white/10">
                            <img src="assets/images/avatars/avatar-5.jpg" alt="" class="w-7 rounded-full">
                            <div> James Lewis </div>
                        </div>
                    </a>

                    <a href="#" class="block">
                        <div class="flex items-center gap-3.5 rounded-lg p-2 hover:bg-secondery dark:hover:bg-white/10">
                            <img src="assets/images/avatars/avatar-4.jpg" alt="" class="w-7 rounded-full">
                            <div> Martin Gray </div>
                        </div>
                    </a>
                    <a href="#" class="block">
                        <div class="flex items-center gap-3.5 rounded-lg p-2 hover:bg-secondery dark:hover:bg-white/10">
                            <img src="assets/images/avatars/avatar-6.jpg" alt="" class="w-7 rounded-full">
                            <div> Alexa stella </div>
                        </div>
                    </a>


                </div>

                <!-- tab list 2 -->
                <div class="space-y -m t-5 p-3 text-sm font-medium h-[280px] overflow-y-auto">

                    <a href="#" class="block">
                        <div class="flex items-center gap-3.5 rounded-lg p-2 hover:bg-secondery dark:hover:bg-white/10">
                            <img src="assets/images/avatars/avatar-1.jpg" alt="" class="w-7 rounded-full">
                            <div> Jesse Steeve </div>
                        </div>
                    </a>
                    <a href="#" class="block">
                        <div class="flex items-center gap-3.5 rounded-lg p-2 hover:bg-secondery dark:hover:bg-white/10">
                            <img src="assets/images/avatars/avatar-2.jpg" alt="" class="w-7 rounded-full">
                            <div> John Michael </div>
                        </div>
                    </a>
                    <a href="#" class="block">
                        <div class="flex items-center gap-3.5 rounded-lg p-2 hover:bg-secondery dark:hover:bg-white/10">
                            <img src="assets/images/avatars/avatar-3.jpg" alt="" class="w-7 rounded-full">
                            <div> Monroe Parker </div>
                        </div>
                    </a>
                    <a href="#" class="block">
                        <div class="flex items-center gap-3.5 rounded-lg p-2 hover:bg-secondery dark:hover:bg-white/10">
                            <img src="assets/images/avatars/avatar-5.jpg" alt="" class="w-7 rounded-full">
                            <div> James Lewis </div>
                        </div>
                    </a>
                    <a href="#" class="block">
                        <div class="flex items-center gap-3.5 rounded-lg p-2 hover:bg-secondery dark:hover:bg-white/10">
                            <img src="assets/images/avatars/avatar-4.jpg" alt="" class="w-7 rounded-full">
                            <div> Martin Gray </div>
                        </div>
                    </a>
                    <a href="#" class="block">
                        <div class="flex items-center gap-3.5 rounded-lg p-2 hover:bg-secondery dark:hover:bg-white/10">
                            <img src="assets/images/avatars/avatar-6.jpg" alt="" class="w-7 rounded-full">
                            <div> Alexa stella </div>
                        </div>
                    </a>
                    <a href="#" class="block">
                        <div class="flex items-center gap-3.5 rounded-lg p-2 hover:bg-secondery dark:hover:bg-white/10">
                            <img src="assets/images/avatars/avatar-1.jpg" alt="" class="w-7 rounded-full">
                            <div> Jesse Steeve </div>
                        </div>
                    </a>
                    <a href="#" class="block">
                        <div class="flex items-center gap-3.5 rounded-lg p-2 hover:bg-secondery dark:hover:bg-white/10">
                            <img src="assets/images/avatars/avatar-2.jpg" alt="" class="w-7 rounded-full">
                            <div> John Michael </div>
                        </div>
                    </a>
                    <a href="#" class="block">
                        <div class="flex items-center gap-3.5 rounded-lg p-2 hover:bg-secondery dark:hover:bg-white/10">
                            <img src="assets/images/avatars/avatar-3.jpg" alt="" class="w-7 rounded-full">
                            <div> Monroe Parker </div>
                        </div>
                    </a>
                    <a href="#" class="block">
                        <div class="flex items-center gap-3.5 rounded-lg p-2 hover:bg-secondery dark:hover:bg-white/10">
                            <img src="assets/images/avatars/avatar-5.jpg" alt="" class="w-7 rounded-full">
                            <div> James Lewis </div>
                        </div>
                    </a>

                    <a href="#" class="block">
                        <div class="flex items-center gap-3.5 rounded-lg p-2 hover:bg-secondery dark:hover:bg-white/10">
                            <img src="assets/images/avatars/avatar-4.jpg" alt="" class="w-7 rounded-full">
                            <div> Martin Gray </div>
                        </div>
                    </a>
                    <a href="#" class="block">
                        <div class="flex items-center gap-3.5 rounded-lg p-2 hover:bg-secondery dark:hover:bg-white/10">
                            <img src="assets/images/avatars/avatar-6.jpg" alt="" class="w-7 rounded-full">
                            <div> Alexa stella </div>
                        </div>
                    </a>


                </div>

            </div>


        </div>

        <div class="w-3.5 h-3.5 absolute -bottom-2 right-5 bg-white rotate-45 dark:bg-dark3"></div>
    </div>
</div>

<script type="text/javascript">
    function toggleLike(postId, isLike) {
        if (isLike) {
            likePost(postId);
        } else {
            unlikePost(postId);
        }

        // Update the button and text
        var likeButton = document.getElementById('likeButton-' + postId);
        var likeText = document.getElementById('likeText-' + postId);

        if (isLike) {
            likeButton.setAttribute('onclick', `toggleLike('${postId}', false)`);
            likeText.setAttribute('onclick', `toggleLike('${postId}', false)`);
            likeText.innerText = 'Unlike';
        } else {
            likeButton.setAttribute('onclick', `toggleLike('${postId}', true)`);
            likeText.setAttribute('onclick', `toggleLike('${postId}', true)`);
            likeText.innerText = 'Like';
        }
    }

    function likePost(postId) {
        var url = "/Home/LikePost?PostId=" + postId;
        fetch(url, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'X-Requested-With': 'XMLHttpRequest',
            },
        })
            .then(response => response.json())
            .then(data => console.log(data));
    }

    function unlikePost(postId) {
        var url = "/Home/UnlikePost?PostId=" + postId;
        fetch(url, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'X-Requested-With': 'XMLHttpRequest',
            },
        })
            .then(response => response.json())
            .then(data => console.log(data));
    }


    @* ----------------------------------------------------------- *@

        function toggleFavorite(postId, isFavorite) {
            if (isFavorite) {
                addFavorite(postId);
            } else {
                removeFavorite(postId);
            }

            // Update the link and icon
            var favoriteLink = document.getElementById('favoriteLink-' + postId);
            var favoriteText = document.getElementById('favoriteText-' + postId);

            if (isFavorite) {
                favoriteLink.setAttribute('onclick', `toggleFavorite('${postId}', false)`);
                favoriteText.setAttribute('onclick', `toggleFavorite('${postId}', false)`);

                favoriteText.innerText = `Remove from favorites`;
            } else {
                favoriteLink.setAttribute('onclick', `toggleFavorite('${postId}', true)`);
                favoriteText.setAttribute('onclick', `toggleFavorite('${postId}', true)`);

                favoriteText.innerText = `Add to favorites`;
            }
        }

    function addFavorite(postId) {
        var url = "/Home/AddFavouriteList?PostId=" + postId;
        fetch(url, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'X-Requested-With': 'XMLHttpRequest',
            },
        })
            .then(response => response.json())
            .then(data => console.log(data));
    }

    function removeFavorite(postId) {
        var url = "/Home/RemoveFavouriteList?PostId=" + postId;
        fetch(url, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'X-Requested-With': 'XMLHttpRequest',
            },
        })
            .then(response => response.json())
            .then(data => console.log(data));
    }

    @* ------------------------------------------------------------------ *@

        function sendMessage(PostId) {
            var idName = 'commentValue-' + PostId
            var comment = document.getElementById(idName).value
            if (comment != "") {
                SendMessage(PostId, comment)


            }

        }

    function SendMessage(postId, message) {
        var url = "/Home/SendComment?PostId=" + postId + "&Comment=" + message;

        fetch(url, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'X-Requested-With': 'XMLHttpRequest',
            },
        })
            .then(response => response.json())
            .then(data => console.log(data));
    }


    @* --------------------------------------------------------------------------- *@

        function toggleDelete(CommentId) {
            RemoveMessage(CommentId)

            var linkComment = document.getElementById('commetArea-' + CommentId)

            linkComment.remove();
        }

    function RemoveMessage(CommentId) {
        var url = "/Home/RemoveComment?CommentId=" + CommentId

        fetch(url, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'X-Requested-With': 'XMLHttpRequest',
            },
        })
            .then(response => response.json())
            .then(data => console.log(data));
    }
</script>